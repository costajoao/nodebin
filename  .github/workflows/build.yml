name: Release and Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: release-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  release:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump package version (minor)
        run: |
          npm version minor --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and tag new version
        run: |
          git commit -am "chore: bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --follow-tags

      - name: Generate sorted changelog section
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          RANGE="${PREV_TAG}..HEAD"
          [ -z "$PREV_TAG" ] && RANGE="HEAD"

          echo "## v${NEW_VERSION}" > section.md
          echo "" >> section.md

          git log $RANGE --pretty=format:"%s" | npx --yes conventional-commits-parser | \
            awk ' ... ' # same awk logic as before

          echo "" >> section.md
          [ -f RELEASE.md ] && cat section.md RELEASE.md > tmp && mv tmp RELEASE.md || mv section.md RELEASE.md
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat section.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit updated RELEASE.md
        run: |
          git add RELEASE.md
          git commit -m "docs: append release notes for v${{ env.NEW_VERSION }}" || echo "No changes"
          git push origin main
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: true
          sbom: true
          tags: |
            costajoao/nodebin:latest
            costajoao/nodebin:${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}