name: Docker Build & Deploy

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - fix/*
      - hotfix/*
      - feature/*
      - release/*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: self-hosted
    environment: production
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump package version (minor)
        run: |
          npm version minor --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and tag new version
        run: |
          git commit -am "chore: bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --follow-tags

      - name: Generate sorted changelog section
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          RANGE="${PREV_TAG}..HEAD"
          if [ -z "$PREV_TAG" ]; then RANGE="HEAD"; fi

          echo "## v${NEW_VERSION}" > section.md
          echo "" >> section.md

          git log $RANGE --pretty=format:"%s" | npx --yes conventional-commits-parser | \
            awk '
              /"type":/ {
                if ($2 ~ /"feat"/) type = "feat";
                else if ($2 ~ /"fix"/) type = "fix";
                else if ($2 ~ /"chore"/) type = "chore";
                else type = "other";
              }
              /"header":/ {
                gsub(/"|,$/, "", $2);
                commit = $2;
                commits[type] = commits[type] "- " commit "\n";
              }
              END {
                if (commits["feat"]) {
                  print "### ✨ Features\n" commits["feat"] >> "section.md";
                }
                if (commits["fix"]) {
                  print "### 🐛 Fixes\n" commits["fix"] >> "section.md";
                }
                if (commits["chore"]) {
                  print "### 🔧 Chores\n" commits["chore"] >> "section.md";
                }
                if (commits["other"]) {
                  print "### 📦 Other\n" commits["other"] >> "section.md";
                }
              }
            '

          echo "" >> section.md

          # Prepend to RELEASE.md
          if [ -f RELEASE.md ]; then
            cat section.md RELEASE.md > RELEASE.tmp && mv RELEASE.tmp RELEASE.md
          else
            mv section.md RELEASE.md
          fi

          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat section.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit updated RELEASE.md
        run: |
          git add RELEASE.md
          git commit -m "docs: append release notes for v${{ env.NEW_VERSION }}" || echo "No changes to commit"
          git push origin main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.2.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push multi-platform Docker image with SBOM + provenance
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          provenance: true
          sbom: true
          tags: |
            costajoao/nodebin:latest
            costajoao/nodebin:${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
