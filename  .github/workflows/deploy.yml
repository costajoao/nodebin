name: Docker Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump package version (minor)
        run: |
          npm version minor --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and tag new version
        run: |
          git commit -am "chore: bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --follow-tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push multi-platform Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/386
          push: true
          tags: |
            costajoao/nodebin:latest
            costajoao/nodebin:${{ env.NEW_VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: v${{ env.NEW_VERSION }}
          body: |
            ðŸš€ New release: **v${{ env.NEW_VERSION }}**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}