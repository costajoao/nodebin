name: Release and Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: release-${{ github.workflow }}
  cancel-in-progress: false

jobs:

  test:
    name: Check Code
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint
        run: bun run lint

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

  release:
    name: Release Version
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.tag }}
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate release changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 

      - name: Get next version
        uses: anothrNick/github-tag-action@v1
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_PREFIX: v
          PRERELEASE: true
          DEFAULT_BUMP: patch

      - name: Release version
        uses: softprops/action-gh-release@v2
        if: ${{ github.ref_name == github.event.repository.default_branch }}
        with:
          draft: false
          prerelease: false
          tag_name: "${{ steps.version.outputs.tag }}"

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    environment: production
    needs: [release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ vars.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ vars.PLATFORMS }}
          push: true
          provenance: true
          sbom: true
          tags: |
            costajoao/nodebin:latest
            costajoao/nodebin:${{ needs.release.outputs.version }}

      - name: Upload Docker Image Digest
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-digest
          path: ./docker-image-digest.txt