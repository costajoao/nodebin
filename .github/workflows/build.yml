name: Release and Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PLATFORMS: linux/amd64,linux/arm64

concurrency:
  group: release-${{ github.workflow }}
  cancel-in-progress: false

jobs:

  verify:
    if: github.actor != 'github-actions[bot]'
    name: Verify Code
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run lint
        run: bun run lint

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    environment: production
    needs: [verify]
    permissions:
      contents: write
      packages: write

    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
      release_notes: ${{ steps.changelog.outputs.release_notes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump package version (minor)
        id: bump
        run: |
          npm version minor --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and tag new version
        run: |
          git commit -am "chore: bump version to $NEW_VERSION"
          git tag v$NEW_VERSION
          git push origin main --follow-tags

      - name: Get next version
        uses: reecetech/version-increment@2024.10.1
        id: version
        with:
          scheme: semver
          increment: patch

      - name: Generate release changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 

      # - name: Commit updated RELEASE.md
      #   run: |
      #     git add RELEASE.md
      #     git commit -m "docs: append release notes for v${{ env.NEW_VERSION }}" || echo "No changes"
      #     git push origin main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          provenance: true
          sbom: true
          tags: |
            costajoao/nodebin:latest
            costajoao/nodebin:${{ needs.build.outputs.new_version }}

      - name: Generate release changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit updated RELEASE.md
        run: |
          git add RELEASE.md
          git commit -m "docs: append release notes for v${{ needs.build.outputs.new_version }}" || echo "No changes"
          git push origin main

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [verify, build]
    permissions:
      contents: write
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outp√•uts.new_version }}
          name: v${{ needs.build.outputs.new_version }}
          body_path: RELEASE.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr_build:
    if: github.event_name == 'pull_request'
    name: PR Build (No Version/Tag)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Add build/test steps here as needed